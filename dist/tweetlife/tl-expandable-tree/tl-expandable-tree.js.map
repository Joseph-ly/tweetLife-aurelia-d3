{"version":3,"sources":["tweetlife/tl-expandable-tree/tl-expandable-tree.js"],"names":["d3","treeContainerWidth","treeContainerHeight","TlExpandableTree","CbkitDialogService","EventAggregator","transX","transY","treeSize","hoverCard","clearTimeout","hideCardTimeout","outCard","setTimeout","addClass","clickTreeNode","model","openRecordDetail","timeline","showPause","timelineData","playPoint","allowedPlay","eventAggregator","startColor","rgb","endColor","computeColor","interpolate","attached","_attached","mouseDown","startPoint","x","y","endPoint","drag","behavior","on","sourceEvent","layerX","layerY","dragmove","select","svgContainer","call","treeSvg","svgTreeGroup","append","attr","svgLinkGroup","svgCircleGroup","diagonal","svg","projection","d","durationTime","altKey","init","detached","dataChanged","data","map","value","tld","key","format","time","timelinePlaytime","length","renderTimeline","tweetTreeData","JSON","parse","stringify","tweetLifeEntityTree","cardModel","entity","mockChild1","children","slice","forEach","Math","random","mockChild2","mockChild22","mockChild3","maxDepth","height","max","width","min","configTree","minTime","svgNodesData","maxTime","treeDepth","scale","linear","domain","range","defaultView","loading","renderBaseTree","tree","layout","size","nodes","parent","css","publish","isCollapse","node","collapse","isRendering","rendering","renderNode","nodeData","animate","linkNode","circleNode","unRender","preRenderChild","push","datum","source","target","style","unselected","transition","duration","attrTween","len","getTotalLength","t","interpolateString","each","toggleCollapse","showCard","hideCard","color","strokeWidth","child","updateSelectNode","selectAll","updateCollapseNode","renderAll","playTree","lastTime","endTime","currentData","filter","dataBrush","params","endIndex","lastItem","endItem","dataRangeChange","startTime","startIndex","event","showCardTimeout","top","left","removeClass","playDone","playBtnClicked","empty","playTimeline","pauseBtnClicked","pauseTimeline","expendBtnClicked","currentExpandNodeDepth","depth","resetBtnClicked","resetTimeline","zoomIn","tempX","tempY","zoomOut"],"mappings":"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","file":"tl-expandable-tree.js","sourceRoot":"/src","sourcesContent":["import { inject, customElement, bindable } from 'aurelia-framework';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport { event as currentEvent } from 'd3';\nimport $ from 'jquery';\nimport { CbkitDialogService } from 'pg/cbkit';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n\nconst treeContainerWidth = 800;\nconst treeContainerHeight = 600;\n\n@customElement('tl-expandable-tree')\n@inject(CbkitDialogService, EventAggregator)\nexport class TlExpandableTree {\n  @bindable data;\n  @bindable loading;\n  @bindable defaultView;\n\n  _attached;\n  transX = 0;\n  transY = 0;\n  treeSize = {};\n\n  constructor(CbkitDialogService, EventAggregator) {\n    this.CbkitDialogService = CbkitDialogService;\n    this.timeline = '';\n    this.showPause = false;\n    this.timelineData = [];\n    this.playPoint = 0;\n    this.allowedPlay = false;\n    this.eventAggregator = EventAggregator;\n\n    this.startColor = d3.rgb(182, 208, 255);\n    this.endColor = d3.rgb(0, 44, 123);\n    this.computeColor = d3.interpolate(this.startColor, this.endColor);\n  }\n\n  attached() {\n    this._attached = true;\n    this.mouseDown = false;\n    this.startPoint = {x: 0, y: 0};\n    this.endPoint = {x: 0, y: 0};\n\n    this.drag = d3.behavior.drag()\n        .on(\"dragstart\", () => {\n            this.startPoint.x = currentEvent.sourceEvent.layerX;\n            this.startPoint.y = currentEvent.sourceEvent.layerY;\n        })\n        .on(\"drag\", () => {\n            this.dragmove()\n        });\n        \n    d3.select(this.svgContainer).call(this.drag);\n\n    this.treeSvg = d3.select(\".svgTree\")\n    this.svgTreeGroup = this.treeSvg.append(\"svg:g\").attr(\"class\", \"innerGroup\")\n    this.svgLinkGroup = this.treeSvg.append(\"svg:g\").attr(\"class\", \"links\").attr(\"transform\", 'translate(100, 0)');\n    this.svgCircleGroup = this.treeSvg.append(\"svg:g\").attr(\"class\", \"node\").attr(\"transform\", 'translate(100, 0)');\n\n    this.diagonal = d3.svg.diagonal()\n      .projection((d) => { return [d.y, d.x]; });\n    this.durationTime = currentEvent && currentEvent.altKey ? 5000 : 500;\n\n    this.init();\n  }\n\n  detached() {\n    this._attached = false;\n  }\n\n  dataChanged() {\n    this.init();\n  }\n\n  init() {\n    if (!this._attached || !this.data) {\n      return;\n    }\n    this.timelineData = this.data.timelineData.map(tld => {\n      return { value: tld.value, key: moment(tld.key).format('ddd, hA'), time: tld.key };\n    });\n\n    this.timelinePlaytime = this.timelineData.length * 300;\n    this.renderTimeline();\n\n    this.tweetTreeData = JSON.parse(JSON.stringify(this.data.tweetLifeEntityTree));\n    \n    // to be deleted just for demo data \n    // this.tweetTreeData.children = this.tweetTreeData.children.slice(0, 30)\n\n    this.cardModel = this.tweetTreeData.entity;\n\n    let mockChild1 = this.tweetTreeData.children[2];\n    mockChild1.children = JSON.parse(JSON.stringify(this.data.tweetLifeEntityTree)).children.slice(2, 5);\n    mockChild1.children.forEach(d => {\n      d.time = mockChild1.time + Math.random() * 1000 * 60 * 60 * 40;\n    });\n    let mockChild2 = this.tweetTreeData.children[6];\n    mockChild2.children = JSON.parse(JSON.stringify(this.data.tweetLifeEntityTree)).children.slice(6, 9);\n    mockChild2.children.forEach(d => {\n      d.time = mockChild2.time + Math.random() * 1000 * 60 * 60 * 40\n    });\n\n    let mockChild22 = mockChild2.children[0];\n    mockChild22.children = JSON.parse(JSON.stringify(this.data.tweetLifeEntityTree)).children.slice(0, 1);\n    mockChild22.children.forEach(d => {\n      d.time = mockChild22.time + Math.random() * 1000 * 60 * 60 * 40;\n    });\n\n    let mockChild3 = this.tweetTreeData.children[0];\n    mockChild3.children = JSON.parse(JSON.stringify(this.data.tweetLifeEntityTree)).children.slice(10, 11);\n    mockChild3.children.forEach(d => {\n      d.time = mockChild3.time + Math.random() * 1000 * 60 * 60 * 40;\n    });\n    this.tweetTreeData.maxDepth = 3;\n\n\n    this.treeSize.height = Math.max(this.tweetTreeData.children.length * 5, treeContainerHeight)\n    this.treeSize.width = Math.min(this.tweetTreeData.maxDepth * 200, treeContainerWidth);\n    this.configTree(this.treeSize.height, this.treeSize.width);\n\n    // config color range\n    let minTime = this.svgNodesData[0].time;\n    let maxTime = 0;\n    let treeDepth = 0;\n    this.svgNodesData.forEach((data) => {\n      if (data.time > maxTime) {\n        maxTime = data.time;\n      }\n    })\n\n    this.scale = d3.scale.linear().domain([minTime, maxTime]).range([0, 1]);\n\n    this.defaultView = false;\n    this.loading = false;\n    this.allowedPlay = true;\n    this.renderBaseTree();\n  }\n\n  configTree(height, width) {\n    this.tree = d3.layout.tree().size([height, width]);\n    this.svgNodesData = this.tree.nodes(this.tweetTreeData);\n\n    this.treeSvg.attr({ width: width+220, height: height+20 })\n    this.transX = 0;\n    this.transY = -height/2 + 300;\n    $('.svgTree').parent().css(\"transform\", \"translate(\" + this.transX + \"px, \" + this.transY + \"px)\")\n  }\n\n  dragmove() {\n      this.transX += (currentEvent.x - this.startPoint.x);\n      this.transY += (currentEvent.y - this.startPoint.y);\n      this.startPoint.x = currentEvent.x;\n      this.startPoint.y = currentEvent.y;\n      $('.svgTree').parent().css(\"transform\", \"translate(\" + this.transX + \"px, \" + this.transY + \"px)\")\n  }\n\n  renderTimeline() {\n    this.eventAggregator.publish('renderTimeline', this.timelineData)\n  }\n\n  // check the node collapsed\n  isCollapse(node) {\n    let collapse;\n    if (!node) {\n      collapse = false;\n    }\n    else if (!(node.children && node.children.length)) {\n      collapse = false;\n    }\n    else if (node.collapse) {\n      collapse = true;\n    } else {\n      if (node.parent) {\n        collapse = this.isCollapse(node.parent);\n      }\n    }\n    return collapse;\n  }\n\n  isRendering(node) {\n    let rendering;\n    if (node) {\n      rendering = false\n    }\n    else if (node.rendering) {\n      rendering = true;\n    } else {\n      if (node.parent) {\n        rendering = this.isRendering(node.parent);\n      }\n    }\n    return rendering;\n  }\n\n  // render a node (link and circle)\n  renderNode(nodeData, animate) {\n    let svgCircleGroup = this.svgCircleGroup;\n    let linkNode, circleNode;\n    if(nodeData.unRender){\n      return;\n    }\n    if (nodeData.parent) {\n      nodeData.rendering = true;\n      // if the node`s parent is rendering, push the node  to waiting render queue\n      // let parent render it until parent  self render complete\n      if (this.isRendering(nodeData.parent)) {\n        nodeData.parent.preRenderChild = nodeData.parent.preRenderChild || [];\n        nodeData.parent.preRenderChild.push(nodeData);\n      }\n      else {\n        linkNode = this.svgLinkGroup.append('svg:path').datum(nodeData)\n          .attr('class', 'link')\n          .attr(\"d\", (d) => {\n            return this.diagonal({ source: d.parent, target: d });\n          })\n          .style('stroke', (d) => {\n            return d.unselected ? '#dce2ea' : '#54BDC8';\n          })\n          .style('display', d => {\n            return this.isCollapse(d.parent) ? 'none' : ''\n          })\n          .transition()\n          .duration(animate ? this.durationTime : 0)\n          .attrTween(\"stroke-dasharray\", function () {\n            var len = this.getTotalLength();\n            return function (t) { return (d3.interpolateString(\"0,\" + len, len + \",0\"))(t) };\n          }).each('end', (d) => {\n            svgCircleGroup.append('svg:circle').datum(nodeData)\n              .on('click', d => {\n                this.toggleCollapse(d);\n              })\n              .on(\"mouseover\", (d) => { this.showCard(d); })\n              .on(\"mouseout\", (d) => { this.hideCard(d); })\n              .style('display', d => {\n                return this.isCollapse(d.parent) ? 'none' : ''\n              })\n              .style(\"fill\", (d) => {\n                let time = this.scale(d.time);\n                let color = this.computeColor(time)\n                return color;\n              })\n              .style(\"stroke-width\", d => {\n                let strokeWidth = '1px';\n                if (d.collapse && d.children && d.children.length) {\n                  strokeWidth = '2px';\n                }\n                return strokeWidth;\n              })\n              .attr(\"r\", 4.5)\n              .attr(\"transform\", function (d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n            nodeData.rendering = false;\n            // if there were some child node wait for rendering complete to render.\n            // render the waiting queue\n            if (nodeData.preRenderChild) {\n              nodeData.preRenderChild.forEach(child => {\n                this.renderNode(child, animate);\n              });\n              nodeData.preRenderChild = [];\n            }\n          });\n      }\n\n    }\n    else {\n      svgCircleGroup.append('svg:circle').datum(nodeData)\n        .on('click', d => {\n          this.toggleCollapse(d);\n        })\n        .on(\"mouseover\", (d) => { this.showCard(d); })\n        .on(\"mouseout\", (d) => { this.hideCard(d); })\n        .style(\"stroke-width\", d => {\n          let strokeWidth = '1px';\n          if (d.collapse && d.children && d.children.length) {\n            strokeWidth = '2px';\n          }\n          return strokeWidth;\n        })\n        .attr(\"r\", 4.5)\n        .attr(\"transform\", function (d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n    }\n  }\n\n  // update the selected \n  updateSelectNode() {\n    this.svgLinkGroup.selectAll('path')\n      .style('stroke', d => {\n        return d.unselected ? '#dce2ea' : '#54BDC8';\n      });\n  }\n\n  toggleCollapse(nodeData) {\n    if (nodeData.children && nodeData.children.length) {\n      nodeData.collapse = !nodeData.collapse;\n      nodeData.children.forEach(d => d.collapse = true);\n      this.updateCollapseNode();\n    }\n  }\n\n  updateCollapseNode() {\n    this.svgLinkGroup.selectAll('path')\n      .style('display', d => {\n        return this.isCollapse(d.parent) ? 'none' : ''\n      });\n    this.svgCircleGroup.selectAll('circle')\n      .style('display', d => {\n        return this.isCollapse(d.parent) ? 'none' : ''\n      })\n      .style(\"stroke-width\", d => {\n        let strokeWidth = '1px';\n        if (d.collapse && d.children && d.children.length) {\n          strokeWidth = '2px';\n        }\n        return strokeWidth;\n      })\n  }\n\n  renderBaseTree() {\n    this.svgNodesData.forEach(d => {\n      d.unRender = false;\n      d.unselected = false;\n      d.collapse = false;\n    });\n    this.tweetTreeData.children.forEach(d => { d.collapse = true; });\n    this.renderAll();\n  }\n\n  renderAll() {\n    this.svgNodesData.forEach(d => {\n      this.renderNode(d, false);\n    });\n  }\n\n  playTree(lastTime, endTime) {\n    let currentData = this.svgNodesData.filter(d => {\n      return d.time >= lastTime && d.time <= endTime;\n    });\n    currentData.forEach(d => {\n      d.unRender = false;\n      d.collapse = false;\n      d.unselected = false;\n      this.renderNode(d, true);\n    });\n  }\n\n  /** the databrush event handler: @params {startIndex,endIndex,startValue,endValue}  */\n  dataBrush(params) {\n    if (params.endIndex > 0) {\n      let lastItem = this.timelineData[params.endIndex - 1];\n      this.playTree(lastItem.time, params.endItem.time);\n    }\n  }\n\n  /** the datazoomRange change event handler: @params {startIndex,endIndex,startValue,endValue}   */\n  dataRangeChange(params) {\n    // this.markTree(params);\n    // this.updateTree(this.rootData, true);\n    let startTime = this.timelineData[params.startIndex].time;\n    let endTime = this.timelineData[params.endIndex].time;\n    this.svgNodesData.forEach(d => {\n      if (d.time >= startTime && d.time <= endTime) {\n        d.unselected = false;\n      } else {\n        d.unselected = true;\n      }\n    });\n    this.updateSelectNode();\n  }\n\n  /*  actions  */\n  showCardTimeout;\n  hideCardTimeout;\n\n  showCard(d) {\n    $(\".cardHoverView\").addClass('hide')\n    let event = currentEvent;\n    this.showCardTimeout = setTimeout(() => {\n      $(\".cardHoverView\").css({ top: event.layerY + 10, left: event.layerX + 10 }).removeClass('hide');\n      this.cardModel = d.entity\n    }, 500)\n  }\n\n  hideCard(d) {\n    clearTimeout(this.showCardTimeout);\n    this.hideCardTimeout = setTimeout(() => {\n      $(\".cardHoverView\").addClass('hide')\n    }, 200)\n  }\n\n  hoverCard = () => {\n    clearTimeout(this.hideCardTimeout);\n  }\n\n  outCard = () => {\n    this.hideCardTimeout = setTimeout(() => {\n      $(\".cardHoverView\").addClass('hide')\n    }, 200)\n  }\n\n  clickTreeNode = (model) => {\n    this.CbkitDialogService.openRecordDetail(model);\n  }\n\n  playDone(params) {\n    this.showPause = false;\n    this.allowedPlay = false;\n  }\n\n\n  /*\n  ** operation btn\n  */\n  playBtnClicked() {\n    if (this.allowedPlay) {\n      $('.svgTree > g').empty();\n      this.svgNodesData.forEach(d => {\n        d.unRender = true;\n        d.collapse = false;\n        d.unselected = false;\n      });\n      this.timeline.playTimeline();\n      this.showPause = true;\n    }\n  }\n\n  pauseBtnClicked() {\n    this.timeline.pauseTimeline();\n    this.showPause = false;\n  }\n  expendBtnClicked() {\n    if (this.svgNodesData && this.svgNodesData.length) {\n      let currentExpandNodeDepth = -1;\n      this.svgNodesData.forEach(d => {\n        if (d.children && d.children.length) {\n          if (!this.isCollapse(d) && d.depth > currentExpandNodeDepth) {\n            currentExpandNodeDepth = d.depth;\n          }\n        }\n      });\n      currentExpandNodeDepth++;\n      this.svgNodesData.forEach(d => {\n        if (currentExpandNodeDepth >= d.depth) {\n          d.collapse = false;\n        } else {\n          d.collapse = true;\n        }\n      });\n      this.updateCollapseNode();\n    }\n  }\n  resetBtnClicked() {\n    this.timeline.resetTimeline();\n    this.allowedPlay = true;\n    this.showPause = false;\n    $('.svgTree > g').empty();\n    this.renderBaseTree();\n  }\n\n  zoomIn() {\n    this.treeSize.height *= 1.5\n    this.treeSize.width *= 1.5;\n    let tempX = this.transX * 1.5;\n    let tempY = this.transY * 1.5;\n\n    this.configTree(this.treeSize.height, this.treeSize.width);\n    $('.svgTree > g').empty();\n    this.renderAll();\n    this.transX = tempX;\n    this.transY = tempY;\n    $('.svgTree').parent().css(\"transform\", \"translate(\" + this.transX + \"px, \" + this.transY + \"px)\")\n\n  }\n\n  zoomOut() {\n    this.treeSize.height /= 1.5\n    this.treeSize.width /= 1.5;\n    let tempX = this.transX / 1.5;\n    let tempY = this.transY / 1.5;\n\n    this.configTree(this.treeSize.height, this.treeSize.width);\n    $('.svgTree > g').empty();\n    this.renderAll();\n    this.transX = tempX;\n    this.transY = tempY;\n    $('.svgTree').parent().css(\"transform\", \"translate(\" + this.transX + \"px, \" + this.transY + \"px)\");\n  }\n\n}\n"]}