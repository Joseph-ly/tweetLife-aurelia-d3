import { Parser } from './parser';
import { Issue } from './issue';
import { ASTNode } from './ast';
/**
* Abstract Lint Rule
*/
export declare abstract class Rule {
    private issues;
    constructor();
    /**
    * Initialise the Rule and hook into the parser.
    */
    abstract init(parser: Parser, path?: string): any;
    /**
    * Called when parsing is complete.
    * If you override finalise(), ensure you `return super.finalise()`)
    */
    finalise(root?: ASTNode): Issue[];
    /**
    * Save an issue that will be returned from the linter
    */
    protected reportIssue(issue: Issue): void;
}
