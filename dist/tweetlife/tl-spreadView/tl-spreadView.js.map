{"version":3,"sources":["tweetlife/tl-spreadView/tl-spreadView.js"],"names":["TlSpreadView","EventAggregator","defaultView","tabs","data","type","loading","eventAggregator","subscribe","allData","attached","changeBetweenView","$event","originTweet"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIaA,Y,WAAAA,Y,WAFZ,qCAAc,eAAd,C,UACA,sE,UAqCE,kCAAa,SAAb,C;AAvBD,wBAAYC,eAAZ,EAA6B;AAAA;;AAAA;;AAAA,SAX7BC,WAW6B,GAXf,IAWe;AAAA,SAV7BC,IAU6B,GAVtB;AACL,wBAAkB;AAChBC,cAAM,IADU;AAEhBC,cAAM;AAFU,OADb;AAKL,kBAAY;AACVD,cAAM,IADI;AAEVC,cAAM;AAFI;AALP,KAUsB;;AAC3B,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,eAAL,GAAuBN,eAAvB;AACA,SAAKM,eAAL,CAAqBC,SAArB,CAA+B,eAA/B,EAAgD,UAACJ,IAAD,EAAU;AACxD,YAAKE,OAAL,GAAe,KAAf;AACA,YAAKG,OAAL,GAAeL,IAAf;AACA,YAAKD,IAAL,CAAU,gBAAV,EAA4BC,IAA5B,GAAmCA,IAAnC;AACA,YAAKD,IAAL,CAAU,UAAV,EAAsBC,IAAtB,GAA6BA,IAA7B;AACA,YAAKF,WAAL,GAAmB,KAAnB;AACD,KAND;AAOA,SAAKK,eAAL,CAAqBC,SAArB,CAA+B,eAA/B,EAAgD,YAAM;AACpD,YAAKN,WAAL,GAAmB,IAAnB;AACD,KAFD;AAGA,SAAKK,eAAL,CAAqBC,SAArB,CAA+B,cAA/B,EAA+C,YAAM;AACnD,YAAKF,OAAL,GAAe,IAAf;AACA,YAAKJ,WAAL,GAAmB,KAAnB;AACD,KAHD;AAID;;yBAEDQ,Q,uBAAW,CAAG,C;;yBAEdC,iB,8BAAkBC,M,EAAQ,CAAG,C;;;;wBAGV;AACjB,UAAI,KAAKH,OAAL,IAAgB,KAAKA,OAAL,CAAaI,WAAjC,EAA8C;AAC5C,eAAO,CAAC,KAAKJ,OAAL,CAAaI,WAAd,CAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF","file":"tl-spreadView.js","sourceRoot":"/src","sourcesContent":["import { inject, customElement, bindable } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { computedFrom } from \"aurelia-binding\";\nimport moment from 'moment';\nimport $ from 'jquery';\n\n@customElement('tl-spreadview')\n@inject(EventAggregator)\nexport class TlSpreadView {\n  allData;\n  defaultView = true;\n  tabs = {\n    \"Spread Pattern\": {\n      data: null,\n      type: 'spread'\n    },\n    \"Map View\": {\n      data: null,\n      type: 'map'\n    },\n  };\n  constructor(EventAggregator) {\n    this.loading = false;\n    this.eventAggregator = EventAggregator;\n    this.eventAggregator.subscribe('tweetlifeData', (data) => {\n      this.loading = false;\n      this.allData = data;\n      this.tabs[\"Spread Pattern\"].data = data;\n      this.tabs[\"Map View\"].data = data;\n      this.defaultView = false;\n    })\n    this.eventAggregator.subscribe('noRootTweetId', () => {\n      this.defaultView = true;\n    })\n    this.eventAggregator.subscribe('triggerFetch', () => {\n      this.loading = true;\n      this.defaultView = false;\n    })\n  }\n\n  attached() { }\n\n  changeBetweenView($event) { };\n\n  @computedFrom('allData')\n  get originTweets() {\n    if (this.allData && this.allData.originTweet) {\n      return [this.allData.originTweet]\n    } else {\n      return [];\n    }\n  }\n\n}\n"]}